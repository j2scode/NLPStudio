% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Document0.R
\docType{class}
\name{Document0}
\alias{Document0}
\title{Document0}
\format{An object of class \code{R6ClassGenerator} of length 24.}
\usage{
Document0
}
\arguments{
\item{name}{Character string indicating the name of the document or file. Required for all objects.}

\item{desc}{Character string containing the description of the document.}

\item{parent}{An object of the Lab or DocumentCollection class that represents the parent object.}

\item{visitor}{An object from one of the visitor classes.}

\item{prior}{A Document Family Class object, deserialized from a prior state.}

\item{stateId}{Character string that uniquely identifies an object and its
state at a specific point in time.}
}
\description{
\code{Document0} Component class for Document composite in the NLPStudio.
}
\details{
\strong{Document Family of Classes Overview:}

The Document family of classes is an implementation of the composite
pattern documented in the book "Design Patterns: Elements of Reusable
Object-Oriented Software" by Erich Gamma, Richard Helm, Ralph Johnson
and John Vlissides (hence Gang of Four). This pattern allows composite
and individual objects to be treated uniformly.

The following sections include:
\itemize{
 \item Class Participants: Classes the comprise this composite pattern.
 \item Class Collaborators: Classes which interact with the Document0 class.
 \item Class Methods: Methods included in the interface.
 }

\strong{Document Family of Classes Participants:}
The participants of the Document0 class are:
\itemize{
 \item Document0: This component class specifies an abstract interface
 for all leaf and composite document classes.
 \item DocumentCollection: The composite class that maintains the
 hierarchical structure of document collections (composites) and individual
 documents (leafs).
 \item Document: An "abstract leaf" class defines the interface for
 DocumentText, DocumentRdata, DocumentCsv, and DocumentXlsx sub-classes.
 \item DocumentText: This "concrete leaf" class for text documents.
 \item DocumentCsv: This "concrete leaf" class for csv documents.
 \item DocumentRdata: This "concrete leaf" class for RData documents.
 \item DocumentXlsx: This "concrete leaf" class for excel documents.
 }

\strong{Document Family of Classes Collaborators:}
The collaborators of the Document family  are:
 \itemize{
  \item Lab: Class responsible for document collections.
  \item State: Class responsible for saving current and restoring prior states of objects.
  \item Historian: Class responsible for maintaining the history of events on objects.
  \item Curator: Class responsible for maintaining the object hierarchy.
  \item Reader: Class responsible for initiating the document read operation.
  \item Writer: Class responsible for initiating the document write operation.
  \item VReader: Visitor class responsible for performing read operations through the Document hierarchy.
  \item VWriter: Visitor class responsible for performing write operations through the Document hierarchy.
  \item VCurator: Visitor class that fulfills commands from the Curator class.
 }

\strong{Document0 Methods:}
There are six types of methods within the Document0 class and they are:
\itemize{
 \item{Core Methods: Core methods shared by both Document and
 DocumentCollection objects.}
 \item{Getter/Setter Methods: Active binding methods for getting and setting
 selected private members.}
 \item{Composite Methods: Methods implemented by the DocumentCollection
 class to maintain the document heirarchy.}
 \item{State Methods: Methods for saving current and restoring prior states of objects .}
 \item{Visitor Methods: Methods for implementation of and messaging
 with objects of the visitor classes.}
}

\strong{Document0 Core Methods:}
 \itemize{
  \item{\code{new(name, desc)}}{Base method for instantiating
  an object of the Document or DocumentCollection classes.
  Specific behaviors implemented in the subclasses. }
  \item{\code{getName()}}{Returns the name of the current object.}
  \item{\code{exposeObject(requester)}}{Base method for returning the elements of the current object if invoked by an authorized method.}
  \item{\code{restore(requester, prior)}}{Base method for restoring an object
  to a prior state, as per the object parameter.}
}

\strong{Document0 Field Getter/Setter Active Binding Methods:}
 \itemize{
  \item{\code{desc()}}{Method used to get / set the description variable.
  Implemented as an active binding and so the field may be updated
  by assignment. This method is concrete and inherited by sub-classes.}
}

\strong{Document0 Composite Methods:}
 \itemize{
  \item{\code{addChild(document)}}{Base method for adding documents to a
  collection. Specific behaviors implemented in the DocumentCollection composite
  sub-class}
  \item{\code{getChildren()}}{Base method for retrieving child objects. Specific behaviors
  implemented in the DocumentCollection subclass }
  \item{\code{removeChild(document)}}{Base method for removing documents from
  a collection. Specific behaviors implemented in the DocumentCollection composite
  sub-class}
  \item{\code{parent(value)}}{Getter/setter method for the parent field, implemented as an active binding on the private member.}
}

\strong{Document0 State Methods:}
 \itemize{
  \item{\code{saveState()}}{Method for saving the current state of an object to file.}
  \item{\code{restoreState(prior)}}{Method for restoring an object to a prior state.}
 }

\strong{Document0 Visitor Methods:}
 \itemize{
  \item{\code{accept(visitor)}}{Method for accepting the visitor objects. Subclasses override these methods.}
}
}
\seealso{
Other Document classes: \code{\link{DocumentCollection}},
  \code{\link{DocumentCsv}}, \code{\link{DocumentRdata}},
  \code{\link{DocumentText}}, \code{\link{DocumentXlsx}},
  \code{\link{Document}}
}
\author{
John James, \email{jjames@datasciencesalon.org}
}
\keyword{datasets}
