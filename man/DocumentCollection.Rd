% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DocumentCollection.R
\docType{class}
\name{DocumentCollection}
\alias{DocumentCollection}
\title{DocumentCollection}
\format{An object of class \code{R6ClassGenerator} of length 24.}
\usage{
DocumentCollection
}
\arguments{
\item{desc}{Character string containing the description of the document.}

\item{document}{An object of the Document class.  Used in DocumentClass composite methods}

\item{name}{Character string indicating the name of the document (required)}

\item{parent}{The parent object for an object of the DocumentCollection class. Parents may be objects of the DocumentCollection or Lab classes.}

\item{purge}{Logical indicating whether the removeDocument method should purge the document from the current environment. The default is FALSE}
}
\description{
\code{DocumentCollection} Class for managing composite document collections
in the NLPStudio
}
\details{
\strong{DocumentCollection Class Overview:}

The DocumentCollection class is the composite part of the Document0 composite
class. This is an implementation of the composite pattern documented in the
book "Design Patterns: Elements of Reusable Object-Oriented Software" by
Erich Gamma, Richard Helm, Ralph Johnson and John Vlissides (hence Gang of Four).
This pattern allows composite and individual objects to be treated uniformly.

\strong{DocumentCollection Core Methods:}
The core methods are as follows:
\itemize{
 \item{\code{new(name, desc)}}{Method for instantiating an object of the
 DocumentCollection classes.}
 \item{\code{getObject()}}{Method for retrieving the object and its
 meta data.}
 \item{\code{accept(visitor)}}{Method for accepting a visitor.  It
 dispatches the appropriate visitor, passing 'self' as a parameter.}
 \item{\code{addContent(content)}}{Not implemented for the DocumentCollection
 class.}
 \item{\code{removeContent()}}{Not implemented for the DocumentCollection
 class.}
}
}
\section{DocumentCollection Composite Methods}{

The composite methods are used to manage parent / child relationshipos among
the documents, and are:
\itemize{
 \item{\code{addDocument(document)}}{Base method for adding documents to a
 collection. Specific behaviors implemented in the Collection composite class}
 \item{\code{removeDocument(document)}}{Base method for removing documents from
 a collection. Specific behaviors implemented in the Collection composite class}
 \item{\code{addPath(path)}}{Base method for adding a path to a document.
 Specific behaviors implemented in the Collection composite class}
}
}

\section{DocumentCollection Input/Output Methods}{

Methods for reading and writing individual and composite document objects.
\itemize{
 \item{readDocument(what, how)}{Method for reading a document.}
 \item{writeDocument(what, how)}{Method for writing a document.}
}
}

\seealso{
Other Document classes: \code{\link{Document0}},
  \code{\link{Document}}
}
\author{
John James, \email{jjames@datasciencesalon.org}
}
\keyword{datasets}
