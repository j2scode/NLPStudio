% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/StateServer.R
\docType{class}
\name{StateServer}
\alias{StateServer}
\title{StateServer}
\format{An object of class \code{R6ClassGenerator} of length 24.}
\usage{
StateServer
}
\arguments{
\item{key}{Character string indicating a unique request from the StateManager class.}

\item{object}{A serializable object to be serialized and saved.}

\item{stateId}{Character string which uniquely identifies an object and its state at a specific point in time.}
}
\description{
\code{StateServer} This class is responsible for serializing and deserializing
object states. Invoked by the StateManager class, this  class is comprised of
two methods, saveState and restoreState. The saveState method takes as
its parameters, a state identifier and the object to be saved,
then serializes and saves the object to the States directory.
The restoreState method takes a state identifier as its parameter and
reads the object, designated by the state identifier from file and returns
it to the StateManager object.
}
\details{
The StateServer class is a participant of the State family of classes.

\strong{State Family of Classes Overview:}
The State family of classes is responsible for object persistence and
data recovery in the NLPStudio package and is comprised of the following
participants.

\strong{State Class Family Participants:}
\itemize{
 \item State: This class oversees the process of saving, restoring and
 querying states. It takes requests from client applications and dispatches
 instantiates the appropriate visitor to fulfill the request. This class
 also provides state query functionality.
 \item StateManager: This class has a persistent single object that
 receives a save/restore request from a visitor, keeps track of the
 saved states, and their locations, and dispatches the appropriate
 save/restore method within the StateServer class to serialize or
 deserialize the object.
 \item StateServer: This class is responsible for serializing and deserializing
 object states.
 \item VWriteState: This visitor class is invoked through the accept method
 of the originator object, and dispatches a request to the StateManager
 class for logging and fulfillment.
 \item VReadState: This visitor class is invoked through the accept method
 of the originator object, and dispatches a request to the StateManager
 class for logging and fulfillment. This class also manages the process
 of restoring composite objects to the prior designated state by iterating
 through the composite hierarchy.
 }

\strong{StateServer Methods:}
The following methods are defined for this class:
\describe{
 \item{\code{new(key)}}{Method that instantiates an object of the StateServer class. The method is invoked by the StateManager class with a unique key. This key is validated against future requests to confirm that the requests is originating from the StateManager class.}
 \item{\code{saveState(key, stateId, object)}}{Method for serializing and storing the object to disk.}
 \item{\code{restoreState(key, stateId)}}{Method for deserializing and returning the object from disk at state designated by the stateId parameter.}
 }
}
\seealso{
Other State Classes: \code{\link{StateManager}},
  \code{\link{State}}
}
\author{
John James, \email{jjames@datasciencesalon.org}
}
\keyword{datasets}
